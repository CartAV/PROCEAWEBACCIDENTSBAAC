{
  "type": "Filesystem",
  "managed": false,
  "formatType": "xml",
  "checklists": {
    "checklists": []
  },
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "formatParams": {
    "hasNoTopLevelElement": false,
    "shortTextMode": true,
    "retrievalMode": "simple",
    "ancestorCapture": "none",
    "rootPath": "/baac/accidents/accident/caracteristiques",
    "charset": "utf-8",
    "overrideFileCharset": false,
    "cellContentMapping": [],
    "ancestorMapping": [],
    "compress": ""
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "versionTag": {
    "versionNumber": 5,
    "lastModifiedBy": {
      "login": "dupontlau"
    },
    "lastModifiedOn": 1540211095520
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "dupontlau"
    },
    "lastModifiedOn": 1536839069355
  },
  "tags": [
    "ProceaWeb XML"
  ],
  "params": {
    "connection": "filesystem_root",
    "path": "/data/sources/ines/input_cartav",
    "notReadyIfEmpty": false,
    "filesSelectionRules": {
      "mode": "ALL",
      "excludeRules": [],
      "includeRules": [],
      "explicitFiles": []
    }
  },
  "schema": {
    "columns": [
      {
        "name": "heureAccident",
        "type": "string"
      },
      {
        "name": "intersection",
        "type": "string"
      },
      {
        "name": "identifiantBAAC",
        "type": "string"
      },
      {
        "name": "typeCollision",
        "type": "string"
      },
      {
        "name": "lumiere",
        "type": "string"
      },
      {
        "name": "adressePostale",
        "type": "string"
      },
      {
        "name": "conditionAtmospherique",
        "type": "string"
      },
      {
        "name": "codeCommuneInsee",
        "type": "string",
        "meaning": "Text"
      },
      {
        "name": "dateAccident",
        "type": "string"
      },
      {
        "name": "departement",
        "type": "string",
        "meaning": "Text"
      },
      {
        "name": "localisation",
        "type": "string"
      },
      {
        "name": "coordonneesGeo",
        "type": "string",
        "meaning": "Text"
      },
      {
        "name": "filename",
        "type": "string",
        "comment": "",
        "meaning": "Text",
        "maxLength": 1000
      }
    ],
    "userModified": true
  },
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "python": {}
    },
    "displayedState": {
      "columns": [],
      "metrics": [
        "basic:COUNT_COLUMNS",
        "basic:COUNT_FILES",
        "basic:SIZE",
        "records:COUNT_RECORDS"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [],
    "displayedState": {
      "checks": []
    }
  }
}