{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": -1,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL"
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "[{\"xsi:nil\":\"true\"}]",
            "to": ""
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "[{\"xsi:nil\":\"true\"}]"
        ],
        "appliesTo": "ALL",
        "stopAfterFirstMatch": false,
        "matching": "FULL_STRING"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "\\[\\{\"facteurPresumeVehicule\":\\[(.+)\\]\\}\\]",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "facteursPresumesVehicule"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "",
        "mapping": [
          {
            "from": "\\{\"xml_text\":\"([0-9]+)\"\\}",
            "to": "$1"
          },
          {
            "from": ",",
            "to": ""
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "facteursPresumesVehicule"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnRenamer",
      "params": {
        "renamings": [
          {
            "from": "sensCirculation",
            "to": "senc"
          },
          {
            "from": "categorieAdmin",
            "to": "catv"
          },
          {
            "from": "obstacleMobileHeurte",
            "to": "obsm"
          },
          {
            "from": "obstacleFixeHeurte",
            "to": "obs"
          },
          {
            "from": "pointChocInitial",
            "to": "choc"
          },
          {
            "from": "manoeuvrePrincipaleAvantAccident",
            "to": "manv"
          },
          {
            "from": "vehiculeSpecial",
            "to": "spev"
          },
          {
            "from": "facteursPresumesVehicule",
            "to": "facv"
          },
          {
            "from": "assurance",
            "to": "assu"
          },
          {
            "from": "appartenantA",
            "to": "prop"
          },
          {
            "from": "nbOccupantsTC",
            "to": "occutc"
          },
          {
            "from": "lettreConventionnelle",
            "to": "num_veh"
          },
          {
            "from": "cNIT",
            "to": "code CNIT"
          }
        ]
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}