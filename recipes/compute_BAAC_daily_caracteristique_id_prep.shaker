{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": -1,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL"
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnRenamer",
      "params": {
        "renamings": [
          {
            "from": "codeUnite",
            "to": "Code Unité"
          },
          {
            "from": "numPV",
            "to": "Numéro P.V."
          },
          {
            "from": "organisme",
            "to": "Organisme"
          },
          {
            "from": "departement",
            "to": "dep"
          },
          {
            "from": "coordonneesGeo",
            "to": "Coordonnées GPS"
          },
          {
            "from": "identifiantBAAC",
            "to": "Id BAAC 2002"
          }
        ]
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "an",
        "mapping": [
          {
            "from": "([0-9]{4})-([0-9]{2})-([0-9]{2})",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "mois",
        "mapping": [
          {
            "from": "([0-9]{4})-([0-9]{2})-([0-9]{2})",
            "to": "$2"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "an",
        "mapping": [
          {
            "from": "([0-9]{4})-([0-9]{2})-([0-9]{2})",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "Heure",
        "mapping": [
          {
            "from": "([0-9]{2}):([0-9]{2}):([0-9]{2})",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "heureAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "Minute",
        "mapping": [
          {
            "from": "([0-9]{2}):([0-9]{2}):([0-9]{2})",
            "to": "$2"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "heureAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnsConcat",
      "params": {
        "outputColumn": "hrmn",
        "columns": [
          "Heure",
          "Minute"
        ],
        "join": ""
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "PythonUDF",
      "params": {
        "mode": "ROW",
        "stopOnError": true,
        "pythonSourceCode": "# Modify the process function to fit your needs\ndef process(row):\n    # In \u0027row\u0027 mode, the process function \n    # must return the full row.\n    # The \u0027row\u0027 argument is a dictionary of columns of the row\n    # You may modify the \u0027row\u0027 in place to\n    # keep the previous values of the row.\n    # Here, we simply add two new columns.\n    row[\"rowLength\"] \u003d len(row)\n    row[\"static_value\"] \u003d 42\n    return row\n",
        "usePythonUnicode": true
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnReorder",
      "params": {
        "referenceColumn": "adr",
        "columns": [
          "Coordonnées GPS"
        ],
        "reorderAction": "BEFORE_COLUMN",
        "appliesTo": "SINGLE_COLUMN"
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}