{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": -1,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL"
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [
    {
      "validityFilter": {
        "column": "Coordonnees GPS",
        "type": "validity",
        "params": {
          "nok": true,
          "type": "Text",
          "ok": true,
          "empty": true
        }
      },
      "column": "Coordonnees GPS",
      "active": true,
      "alphanumFilter": {
        "values": [
          "nil"
        ],
        "column": "Coordonnees GPS",
        "type": "alphanum",
        "params": {}
      },
      "type": "columnFilter",
      "$$hashKey": "object:28357",
      "facet": {
        "columnType": "ALPHANUM",
        "selectedValues": {},
        "column": "Coordonnees GPS",
        "sort": "count",
        "type": "facet",
        "currentMode": "ALPHANUM"
      },
      "currentMode": "SIMPLE_ALPHANUM"
    }
  ],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnRenamer",
      "params": {
        "renamings": [
          {
            "from": "codeUnite",
            "to": "Code Unité"
          },
          {
            "from": "numPV",
            "to": "Numéro P.V."
          },
          {
            "from": "organisme",
            "to": "Organisme"
          },
          {
            "from": "departement",
            "to": "dep"
          },
          {
            "from": "coordonneesGeo",
            "to": "Coordonnées GPS"
          },
          {
            "from": "identifiantBAAC",
            "to": "Id BAAC 2002"
          }
        ]
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "an",
        "mapping": [
          {
            "from": "[0-9]{2}([0-9]{2})-([0-9]{2})-([0-9]{2})",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "mois",
        "mapping": [
          {
            "from": "([0-9]{4})-0*([0-9]{1,2})-([0-9]{2})",
            "to": "$2"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "jour",
        "mapping": [
          {
            "from": "([0-9]{4})-([0-9]{2})-0?([0-9]{1,2})",
            "to": "$3"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "dateAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "Heure",
        "mapping": [
          {
            "from": "([0-9]{2}):([0-9]{2}):([0-9]{2})",
            "to": "$1"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "heureAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "FindReplace",
      "params": {
        "output": "Minute",
        "mapping": [
          {
            "from": "([0-9]{2}):([0-9]{2}):([0-9]{2})",
            "to": "$2"
          }
        ],
        "normalization": "EXACT",
        "columns": [
          "heureAccident"
        ],
        "appliesTo": "SINGLE_COLUMN",
        "stopAfterFirstMatch": false,
        "matching": "PATTERN"
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "type": "ColumnsConcat",
      "params": {
        "outputColumn": "hrmn",
        "columns": [
          "Heure",
          "Minute"
        ],
        "join": ""
      },
      "alwaysShowComment": false
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": true,
      "type": "PythonUDF",
      "params": {
        "mode": "ROW",
        "stopOnError": true,
        "pythonSourceCode": "def process(row):\n    # Produce GPS coordinates\n    lat, lon \u003d row[\u0027Coordonnees GPS\u0027].split(\u0027,\u0027)\n    new_lat \u003d int(float(lat) * 100000)\n    row[\u0027lat\u0027] \u003d new_lat\n    # assert row[\u0027lat\u0027]\u003e\u003e5 \u003d\u003d int(float(lat))\n    new_long \u003d int(float(lon) * 100000)\n    row[\u0027long\u0027] \u003d new_long\n    # assert row[\u0027lon\u0027]\u003e\u003e5 \u003d\u003d int(float(lon))\n    row[\u0027gps\u0027] \u003d \u0027M\u0027    \n    # Correct commune\n    row[\u0027com\u0027] \u003d row[\u0027com\u0027][-3:]\n    return row\n",
        "usePythonUnicode": true
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}